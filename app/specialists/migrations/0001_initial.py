# Generated by Django 5.0 on 2023-12-27 16:20

import django.db.models.deletion
import users.validators
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('listings', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BasicService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Базовая услуга',
                'verbose_name_plural': 'Базовые услуги',
            },
        ),
        migrations.CreateModel(
            name='MassageFor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('massage_for', models.CharField(max_length=50, verbose_name='Массаж для')),
                ('slug', models.SlugField()),
                ('icon', models.CharField(max_length=50, verbose_name='Иконка')),
            ],
            options={
                'verbose_name': 'Для кого массаж',
                'verbose_name_plural': 'Для кого массаж',
            },
        ),
        migrations.CreateModel(
            name='SpecialistProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.BooleanField(blank=True, choices=[(True, 'Мужчина'), (False, 'Женщина')], null=True, verbose_name='Пол')),
                ('birth_date', models.DateField(blank=True, null=True, validators=[users.validators.validate_age], verbose_name='Возраст')),
                ('height', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Рост')),
                ('weight', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Вес')),
                ('practice_start_date', models.DateField(blank=True, null=True, verbose_name='Дата начала практики')),
                ('address', models.CharField(blank=True, max_length=200, null=True, verbose_name='Адрес')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='широта')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='долгота')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Номер телефона')),
                ('telegram_profile', models.CharField(blank=True, max_length=20, null=True, verbose_name='Телеграмм')),
                ('instagram_profile', models.CharField(blank=True, max_length=20, null=True, verbose_name='Инстаграм')),
                ('description', models.TextField(blank=True, null=True, verbose_name='О себе')),
                ('is_profile_active', models.BooleanField(default=False)),
                ('basic_services', models.ManyToManyField(blank=True, to='specialists.basicservice')),
                ('features', models.ManyToManyField(blank=True, to='listings.feature')),
                ('massage_for', models.ManyToManyField(related_name='specialists', related_query_name='specialist', to='specialists.massagefor')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='specialist_profile', related_query_name='specialist_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Мастер',
                'verbose_name_plural': 'Мастера',
            },
        ),
        migrations.CreateModel(
            name='BasicServicePrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('home_price', models.PositiveSmallIntegerField(null=True, verbose_name='Приём у себя')),
                ('on_site_price', models.PositiveSmallIntegerField(null=True, verbose_name='Выезд на дом')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='specialists.basicservice')),
                ('specialist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='specialists.specialistprofile')),
            ],
        ),
    ]
